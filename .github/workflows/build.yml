#name: Build
#
#on:
#  push:
#    branches:
#      - main
#  pull_request:
#    branches:
#      - main
#
#jobs:
#  build:
#    name: Build and analyze
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#        with:
#          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v4
#        with:
#          java-version: 17
#          distribution: 'zulu'
#
#      - name: Cache SonarQube packages
#        uses: actions/cache@v4
#        with:
#          path: ~/.sonar/cache
#          key: ${{ runner.os }}-sonar
#          restore-keys: ${{ runner.os }}-sonar
#
#      - name: Cache Maven packages
#        uses: actions/cache@v4
#        with:
#          path: ~/.m2
#          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#          restore-keys: ${{ runner.os }}-m2
#
#      # USERS
#      - name: User Service Build and analyze
#        working-directory: api/users
#        env:
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
#        run: mvn -B verify -Dmaven.test.failure.ignore=true org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=safe-zone -Dsonar.projectName='SafeZone'
#
#      - name: SonarQube Quality Gate check - Users
#        id: sonarqube-quality-gate-check-users
#        uses: SonarSource/sonarqube-quality-gate-action@v1.1.0
#        with:
#          scanMetadataReportFile: api/users/target/sonar/report-task.txt
#        env:
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
#
#      - name: "Quality Gate Status - Users"
#        run: |
#          if [ "${{ steps.sonarqube-quality-gate-check-users.outputs.quality-gate-status }}" != "PASSED" ]; then
#            echo "Quality Gate failed for USERS!"
#            exit 1
#          fi
#
#      # MEDIA
#      - name: Media Service Build and analyze
#        working-directory: api/media  # Adjust path as needed
#        env:
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
#        run: mvn -B verify -Dmaven.test.failure.ignore=true org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=safe-zone -Dsonar.projectName='SafeZone'
#
#      - name: SonarQube Quality Gate check - Media
#        id: sonarqube-quality-gate-check-media
#        uses: SonarSource/sonarqube-quality-gate-action@v1.1.0
#        with:
#          scanMetadataReportFile: api/media/target/sonar/report-task.txt
#        env:
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
#
#      - name: "Quality Gate Status - Media"
#        run: |
#          if [ "${{ steps.sonarqube-quality-gate-check-media.outputs.quality-gate-status }}" != "PASSED" ]; then
#            echo "Quality Gate failed for MEDIA!"
#            exit 1
#          fi
#
#      # PRODUCTS
##      - name: Products Service Build and analyze
##        working-directory: api/products  # Adjust path as needed
##        env:
##          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
##          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
##        run: mvn -B verify -Dmaven.test.failure.ignore=true org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=safe-zone -Dsonar.projectName='SafeZone'
##
##      - name: SonarQube Quality Gate check - Products
##        id: sonarqube-quality-gate-check-products
##        uses: SonarSource/sonarqube-quality-gate-action@v1.1.0
##        with:
##          scanMetadataReportFile: api/products/target/sonar/report-task.txt
##        env:
##          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
##          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
##
##      - name: "Quality Gate Status - Products"
##        run: |
##          if [ "${{ steps.sonarqube-quality-gate-check-products.outputs.quality-gate-status }}" != "PASSED" ]; then
##            echo "Quality Gate failed for PRODUCTS!"
##            exit 1
##          fi
